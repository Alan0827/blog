(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{358:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"vue的定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue的定义"}},[s._v("#")]),s._v(" vue的定义：")]),s._v(" "),n("ul",[n("li",[s._v("vue是一套用于构建用户界面的渐进式框架")]),s._v(" "),n("li",[s._v("vue是一款基于MVVM方式的轻量级的框架")]),s._v(" "),n("li",[s._v("vue是一款基于数据驱动、组件化思想的框架")]),s._v(" "),n("li",[s._v("vue被设计为可以自底向上、逐层应用的框架")]),s._v(" "),n("li",[s._v("vue的核心库只关注视图层，易于上手，还便于与第三方库或既有项目整合")]),s._v(" "),n("li",[s._v("当与现代化的工具链以及各种支持类库结合使用时，vue也完全能够为复杂的单页应用提供驱动")])]),s._v(" "),n("blockquote",[n("p",[s._v("数据驱动：")])]),s._v(" "),n("p",[s._v("Vue.js 一个核心思想是数据驱动。所谓数据驱动是指视图是由数据驱动生成的，对视图的修改，不会直接操作 DOM，而是通过修改数据。相比传统的前端开发，如使用 jQuery 等前端库直接修改 DOM，大大简化了代码量，特别是当交互复杂的时候，只关心数据的修改会让代码的逻辑变的非常清晰，因为 DOM 变成了数据的映射，我们所有的逻辑都是对数据的修改，而不用碰触 DOM，这样的代码非常利于维护")]),s._v(" "),n("p",[s._v("在MVVM中，M(model)---代表JavaScript  Objects，V(view)---DOM也就是UI，VM(ViewModel)----代表Vue实例对象（在该对象中有Directives和DOM Listeners）")]),s._v(" "),n("p",[s._v("在vue.js里面只需要改变数据，Vue.js通过Directives指令去对DOM做封装，当数据发生变化，会通知指令去修改对应的DOM，数据驱动DOM的变化，DOM是数据的一种自然的映射。vue.js还会对View操作做一些监听（DOM Listener），当我们修改视图的时候，vue.js监听到这些变化，从而改变数据。这样就形成了数据的双向绑定。")]),s._v(" "),n("blockquote",[n("p",[s._v("vue实现双向绑定原理")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/vue.4pumptd94360.jpg",alt:"vue"}})]),s._v(" "),n("h3",{attrs:{id:"变化侦测-observer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变化侦测-observer"}},[s._v("#")]),s._v(" 变化侦测 --- Observer")]),s._v(" "),n("p",[s._v("那Vue是怎么知道state变化了呢？换句话说，数据变化了是怎么通知给Vue呢？")]),s._v(" "),n("p",[s._v("变化侦测就是追踪状态，一旦发生了变化，就要去更新视图。")]),s._v(" "),n("p",[s._v("变化侦测，前端三大框架中均有涉及。在Angular中是通过脏值检查流程来实现变化侦测；在React是通过对比虚拟DOM来实现变化侦测，而在Vue中也有自己的一套变化侦测实现机制。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 数据可侦测\n\nlet man = {\n  age:18\n}\nlet val = 18\nObject.defineProperty(man, 'age', {\n  enumerable: true,\n  configurable: true,\n  get(){\n    console.log('age属性被读取了')\n    return val\n  },\n  set(newVal){\n    console.log('age属性被修改了')\n    val = newVal\n  }\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("通过Object.defineProperty()方法把这个属性的读和写分别使用get()和set()进行拦截，每当该属性进行读或写操作的时候就会触发get()和set()。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 对应源码位置：src/core/observer/index.js\n\n/**\n * Observer类会通过递归的方式把一个对象的所有属性都转化成可观测对象\n */\nexport class Observer {\n  constructor (value) {\n    this.value = value\n    // 给value新增一个__ob__属性，值为该value的Observer实例\n    // 相当于为value打上标记，表示它已经被转化成响应式了，避免重复操作\n    def(value,'__ob__',this)\n    if (Array.isArray(value)) {\n      // 当value为数组时的逻辑\n      // ...\n    } else {\n      this.walk(value)\n    }\n  }\n\n  walk (obj: Object) {\n    const keys = Object.keys(obj)\n    for (let i = 0; i < keys.length; i++) {\n      defineReactive(obj, keys[i])\n    }\n  }\n}\n/**\n * 使一个对象转化成可观测对象\n * @param { Object } obj 对象\n * @param { String } key 对象的key\n * @param { Any } val 对象的某个key的值\n */\nfunction defineReactive (obj,key,val) {\n  // 如果只传了obj和key，那么val = obj[key]\n  if (arguments.length === 2) {\n    val = obj[key]\n  }\n  if(typeof val === 'object'){\n      new Observer(val)\n  }\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get(){\n      console.log(`${key}属性被读取了`);\n      return val;\n    },\n    set(newVal){\n      if(val === newVal){\n          return\n      }\n      console.log(`${key}属性被修改了`);\n      val = newVal;\n    }\n  })\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br")])]),n("p",[s._v("上述代码省略大部分源码，只看核心逻辑。\n只要我们将一个object传到observer中，那么这个object就会变成可观测的、响应式的object。\nobserver类位于源码的src/core/observer/index.js中。")]),s._v(" "),n("h3",{attrs:{id:"依赖收集-dep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖收集-dep"}},[s._v("#")]),s._v(" 依赖收集 Dep")]),s._v(" "),n("p",[s._v("1.什么是依赖收集?")]),s._v(" "),n("blockquote",[n("p",[s._v('数据的变化需要反映到视图上去，这个过程我们需要收集数据。\n我们把"谁用到了这个数据"称为"谁依赖了这个数据",我们给每个数据都建一个依赖数组(因为一个数据可能被多处使用)，谁依赖了这个数据(即谁用到了这个数据)我们就把谁放入这个依赖数组中，那么当这个数据发生变化的时候，我们就去它对应的依赖数组中，把每个依赖都通知一遍，告诉他们："你们依赖的数据变啦，你们该更新啦！"。这个过程就是依赖收集。')])]),s._v(" "),n("p",[s._v("2.何时收集依赖？何时通知依赖更新？")]),s._v(" "),n("blockquote",[n("p",[s._v("在getter中收集依赖，在setter中通知依赖更新。")])]),s._v(" "),n("p",[s._v("3.把依赖收集到哪里")]),s._v(" "),n("blockquote",[n("p",[s._v("为每一个数据都建立一个依赖管理器，把这个数据所有的依赖都管理起来。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 源码位置：src/core/observer/dep.js\nexport default class Dep {\n  constructor () {\n    this.subs = []\n  }\n\n  addSub (sub) {\n    this.subs.push(sub)\n  }\n  // 删除一个依赖\n  removeSub (sub) {\n    remove(this.subs, sub)\n  }\n  // 添加一个依赖\n  depend () {\n    if (window.target) {\n      this.addSub(window.target)\n    }\n  }\n  // 通知所有依赖更新\n  notify () {\n    const subs = this.subs.slice()\n    for (let i = 0, l = subs.length; i < l; i++) {\n      subs[i].update()\n    }\n  }\n}\n\n/**\n * Remove an item from an array\n */\nexport function remove (arr, item) {\n  if (arr.length) {\n    const index = arr.indexOf(item)\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br")])]),n("p",[s._v("然后，在getter中收集，在setter中通知依赖更新")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function defineReactive (obj,key,val) {\n  if (arguments.length === 2) {\n    val = obj[key]\n  }\n  if(typeof val === 'object'){\n    new Observer(val)\n  }\n  const dep = new Dep()  //实例化一个依赖管理器，生成一个依赖管理数组dep\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get(){\n      dep.depend()    // 在getter中收集依赖,调用depend方法\n      return val;\n    },\n    set(newVal){\n      if(val === newVal){\n          return\n      }\n      val = newVal;\n      dep.notify()   // 在setter中通知依赖更新，调用notify方法\n    }\n  })\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"watcher类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#watcher类"}},[s._v("#")]),s._v(" Watcher类")]),s._v(" "),n("p",[s._v("谁用到了数据，谁就是依赖，我们就为谁创建一个Watcher实例。在之后数据变化时，我们不直接去通知依赖更新，而是通知依赖对应的Watch实例，由Watcher实例update方法去通知真正的视图。")]),s._v(" "),n("p",[s._v("实现方法如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("export default class Watcher {\n  constructor (vm,expOrFn,cb) {\n    this.vm = vm;\n    this.cb = cb;\n    this.getter = parsePath(expOrFn)\n    this.value = this.get()\n  }\n  get () {\n    window.target = this;\n    const vm = this.vm\n    let value = this.getter.call(vm, vm)\n    window.target = undefined;\n    return value\n  }\n  update () {\n    const oldValue = this.value\n    this.value = this.get()\n    this.cb.call(this.vm, this.value, oldValue)\n  }\n}\n\n/**\n * Parse simple path.\n * 把一个形如'data.a.b.c'的字符串路径所表示的值，从真实的data对象中取出来\n * 例如：\n * data = {a:{b:{c:2}}}\n * parsePath('a.b.c')(data)  // 2\n */\nconst bailRE = /[^\\w.$]/\nexport function parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  const segments = path.split('.')\n  return function (obj) {\n    for (let i = 0; i < segments.length; i++) {\n      if (!obj) return\n      obj = obj[segments[i]]\n    }\n    return obj\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("以上，就彻底完成了对Object数据的侦测，依赖收集，依赖的更新等所有操作。")]),s._v(" "),n("p",[s._v("大致流程：")]),s._v(" "),n("ol",[n("li",[s._v("Data通过observer转换成了getter/setter的形式来追踪变化。")]),s._v(" "),n("li",[s._v("当外界通过Watcher读取数据时，会触发getter从而将Watcher添加到依赖中。")]),s._v(" "),n("li",[s._v("当数据发生了变化时，会触发setter，从而向Dep中的依赖（即Watcher）发送通知。")]),s._v(" "),n("li",[s._v("Watcher接收到通知后，会向外界发送通知，变化通知到外界后可能会触发视图更新，也有可能触发用户的某个回调函数等。")])]),s._v(" "),n("p",[n("font",{attrs:{color:"red"}},[n("strong",[s._v("注意事项：")])])],1),s._v(" "),n("p",[s._v("Object.defineProperty只能对属性值的变化进行拦截，但是不能拦截对象，比如属性的新增、删除等。这就导致了我们没法收集依赖，通知视图。\n为了解决这一问题，Vue增加了两个全局API:Vue.set和Vue.delete。")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("参考文档：")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/vuejs/vue/tree/dev/src/core",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/vuejs/vue/tree/dev/src/core"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://cn.vuejs.org/v2/guide/reactivity.html"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://vue-js.com/learn-vue/start/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://vue-js.com/learn-vue/start/"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=t.exports}}]);
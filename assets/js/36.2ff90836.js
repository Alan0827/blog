(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{363:function(e,a,t){"use strict";t.r(a);var s=t(4),n=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),a("ul",[a("li",[e._v("keep-alive组件是vue的内置组件，被其包裹的组件会缓存下来，不活动的组件不会销毁，减少了很大的性能开销，它自身并不会渲染dom元素，也不会出现在父组件链中。")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性：")]),e._v(" "),a("ul",[a("li",[e._v("include - 需要缓存的匹配的组件的name")]),e._v(" "),a("li",[e._v("exclude - 不需要缓存的匹配的组件的name")]),e._v(" "),a("li",[e._v("max - 做多可以缓存的组件实例num（2.5.0新增的）")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[e._v("#")]),e._v(" 用法：")]),e._v(" "),a("blockquote",[a("p",[e._v("只需要把需要缓存的组件放在keep-alive中，或者include需要缓存的组件的name。\n注意：这里的name指的是vue组件中export default中的name，还有路由表里定义的name，两个name必须一样，才能准确的缓存到")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition name="fade-transform" mode="out-in">\n\t<keep-alive :include="cachedViews">\n\t\t<router-view />\n\t</keep-alive>\n</transition>\n\n//include=cachedViews  这个是自己维护的需要缓存的组件name list   放在vuex的store中\n<script>\nexport default {\n\tdata(){\n\t\treturn{}\n\t}\n\tcomputed: {\n\t\tcachedViews() {\n\t\t\treturn this.$store.state.tagsView.cachedViews\n\t\t},\n\t},\n}\n<\/script>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br")])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[e._v("#")]),e._v(" 路由")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{\n  path: '/my-project',\n  component: Layout,\n  redirect: '/my-project/project-list',\n  name: 'Myproject',\n  meta: { title: 'title', icon: 'icon' },\n  children: [\n    {\n      path: 'project-list',\n      name: 'ProjectList',   //说的就是这里的name\n      component: () => import('@/views/my-project/project-list/index'),\n      meta: { title: 'title' }\n    },\n\t]\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"project-list中index组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-list中index组件"}},[e._v("#")]),e._v(" project-list中index组件")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<template>\n\t<div class=\"project-list\">....</div>\n</template>\n<script>\nexport default {\n\tname:'ProjectList',   //这里的name\n\tdata(){\n\t\treturn{}\n\t}\n}\n<\/script>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("blockquote",[a("p",[e._v("【上述的两个name必须一致】(切记 name 命名时候尽量保证唯一性 切记不要和某些组件的命名重复了，不然会递归引用最后内存溢出等问题)")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"缓存不适合的场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存不适合的场景"}},[e._v("#")]),e._v(" 缓存不适合的场景")]),e._v(" "),a("blockquote",[a("p",[e._v("有些场景是不太适合做缓存的，例如，详情页面，详情页面都是一个，/detail/1,/detial/2,都是共用一个组件，虽然路由不同，意味着他们的name是\n是一样的，就如前面提到的，keep-alive的 include 只能根据组件名来进行缓存，所以这样就出问题了。")])]),e._v(" "),a("ul",[a("li",[e._v("解决方案，可以不用include，强制缓存所有组件，当然也是有弊端的，不能动态的删除缓存，只能设置一个最大缓存实例；")]),e._v(" "),a("li",[e._v("也可以使用浏览器的缓存方案替代，自己进行缓存（还在实践中）")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"activated-和-deactivated-钩子-2-2-0以上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activated-和-deactivated-钩子-2-2-0以上"}},[e._v("#")]),e._v(" activated 和 deactivated 钩子 （2.2.0以上）")]),e._v(" "),a("p",[e._v("当你需要在不同的缓存组件切换显示的时候，需要做数据刷新的时候，你会发现 created,mounted 不起作用了，当然的，既然缓存了。这个时候，我们需要请求的时候就必须放在 activated 和 deactivated 生命周期中。")]),e._v(" "),a("ul",[a("li",[e._v("注：这两个钩子一定是要在使用了keep-alive之后才会有效果的，否则不存在。")])]),e._v(" "),a("p",[e._v("使用了keep-alive，页面第一次进入，钩子的触发顺序created-> mounted-> activated，退出时触发deactivated。当再次进入（前进或者后退）时，只触发activated。")]),e._v(" "),a("p",[e._v("事件挂载的方法等，只执行一次的放在 mounted 中；组件每次进去执行的方法放在 activated 中， activated 中的不管是否需要缓存多会执行。")]),e._v(" "),a("hr"),e._v(" "),a("blockquote",[a("p",[e._v("最后需要注意的是：\nkeep-alive 是用在其一个直属的子组件被开关的情形。如果你在其中有 v-for 则不会工作。如果有上述的多个条件性的子元素，keep-alive 要求同时只有一个子元素被渲染。")])]),e._v(" "),a("p",[e._v("组件缓存的一些要点都在这里了，自己开发过程中确实经历了这些东西，这里记录下来，希望后来人不会入坑")]),e._v(" "),a("p",[e._v("有好的见解，欢迎留言，留下联系方式，大家互相沟通！")]),e._v(" "),a("p",[e._v("不喜勿喷，谢谢！")])])}),[],!1,null,null,null);a.default=n.exports}}]);
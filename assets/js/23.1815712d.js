(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{351:function(t,s,a){"use strict";a.r(s);var n=a(4),c=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"闭包之前我们来看看函数的作用域以及作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包之前我们来看看函数的作用域以及作用域链"}},[t._v("#")]),t._v(" 闭包之前我们\b来看看函数的作用域以及作用域链")]),t._v(" "),s("h2",{attrs:{id:"函数的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的生命周期"}},[t._v("#")]),t._v(" 函数的生命周期:")]),t._v(" "),s("blockquote",[s("p",[t._v("1、程序开始执行:\n创建一个Execution Context Stack(ECS)\n依次保存正在调用的函数的执行环境的栈结构\n创建全局作用域对象:window\n在ECS中压入第一个全局执行环境EC，全局EC引用window")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/f1.4kq3xw7te6q0.jpg",alt:"f1"}})]),t._v(" "),s("blockquote",[s("p",[t._v("2、定义函数时:\n创建函数对象，封装函数的定义\n在函数对象中，设置scope属性，引用函数来自的作用域，通常scope都是window\n用函数名创建全局变量，引用函数对象")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/f2.1ym54a1vhg6.jpg",alt:"f2"}})]),t._v(" "),s("blockquote",[s("p",[t._v("3、调用函数时:\n创建一个活动对象Actived Object(AO):       活动对象:保存函数的局部变量的函数作用域对象。\n向ECS中压入本次函数调用的执行环境EC\nEC引用AO\n设置AO引用函数的scope（window）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/f3.515vm329dm80.jpg",alt:"f3"}})]),t._v(" "),s("blockquote",[s("p",[t._v("4、函数调用后:\nEC出栈，导致AO无人使用，被释放\n导致，AO中的局部变量一同被释放！")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/f4.3lblah4j5ma0.jpg",alt:"f4"}})]),t._v(" "),s("blockquote",[s("p",[t._v("作用域: 一个变量的可用范围\n其实window对象就是全局作用域\nAO对象就是函数作用域\nAO对象又引用了window对象")])]),t._v(" "),s("blockquote",[s("p",[t._v("作用域链: 由各级作用域对象，逐级引用形成的链式结构，就是作用域链。\n作用域链的末尾是window对象\n作用域链控制着变量的使用顺序:\n优先使用AO中的局部变量\n如果AO中没有，就延作用域链向下找。\n如果到window还没找到，就报错")])]),t._v(" "),s("h2",{attrs:{id:"什么是闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[t._v("#")]),t._v(" 什么是闭包？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("简单讲，闭包就是指有权访问另一个函数作用域中的变量的函数。\n\nMDN 上面这么说：闭包是一种特殊的对象。\n它由两部分构成：函数，以及创建该函数的环境。环境由闭包创建时在作用域中的任何局部变量组成。\n")])])]),s("h2",{attrs:{id:"为什么使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用"}},[t._v("#")]),t._v(" 为什么使用:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("全局变量: 优: 随处可用，可反复使用\n          缺: 易被全局污染\n\n局部变量: 优: 仅在函数内可用，不会被污染\n          缺: 无法反复使用\n")])])]),s("h2",{attrs:{id:"何时使用-如果希望重用一个变量-且不希望该变量被随意篡改时。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时使用-如果希望重用一个变量-且不希望该变量被随意篡改时。"}},[t._v("#")]),t._v(" 何时使用: 如果希望重用一个变量，且不希望该变量被随意篡改时。")]),t._v(" "),s("h2",{attrs:{id:"如何实现-3步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现-3步"}},[t._v("#")]),t._v(" 如何实现: 3步")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. 用外层函数将受保护的变量和操作变量的函数封装在内部\n\n2. 外层函数将内层函数返回\n\n3. 调用外层函数，获得返回的内层函数对象。\n")])])]),s("p",[t._v("说明: 1. 两次外层函数调用返回的闭包中，受保护的变量是各自独立的，没有任何关系。")]),t._v(" "),s("h2",{attrs:{id:"创建闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建闭包"}},[t._v("#")]),t._v(" 创建闭包")]),t._v(" "),s("blockquote",[s("p",[t._v("1.开始几步和函数的\b声明创建一样")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/1.nluxidfmk8g.jpg",alt:"1"}})]),t._v(" "),s("blockquote",[s("p",[t._v("2.函数创建完成后的各自引用")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/2.27thouyqh4is.jpg",alt:"2"}})]),t._v(" "),s("blockquote",[s("p",[t._v("3.调用外层函数形成活动AO，向全局EC中\b压入本次函数的EC")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/3.7c6r3vy4ms00.jpg",alt:"3"}})]),t._v(" "),s("blockquote",[s("p",[t._v("4.外层函数返回内层函数，形成内层函数的对象，这样\b图中绿色的箭头形成引用")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/4.71uu495wvzw.jpg",alt:"4"}})]),t._v(" "),s("blockquote",[s("p",[t._v("5.当外层函数的调用结束后，外层函数的作用域并没有释放，留了下\b来，就形成了大名鼎鼎的bibox")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/5.36n1bhkbomi0.jpg",alt:"5"}})]),t._v(" "),s("blockquote",[s("p",[t._v("6.调用执行函数时，n++")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/6.60so0otrgj00.jpg",alt:"6"}})]),t._v(" "),s("blockquote",[s("p",[t._v("7.函数调用结束后，getNum出栈")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/7.42bcjd3i3d20.jpg",alt:"7"}})]),t._v(" "),s("blockquote",[s("p",[t._v("8.当执行n=1时，并没有改变outer AO中的局部变量，所以最后的调用n=2")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/20220907/8.7e0ffbnac3k0.jpg",alt:"8"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("function outer(){\n    var n = 1;\n    return function(){\n        console.log(n++)\n    }\n}\nvar getNum = outer();\ngetNum();   //1\nn = 1; \ngetNum()  //2\n")])])]),s("h2",{attrs:{id:"闭包缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包缺点"}},[t._v("#")]),t._v(" 闭包缺点:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("占用更多内存空间\n\n且一旦形成闭包，无法自动释放。\n")])])]),s("p",[t._v("至此，闭包的全部解析就这样了")])])}),[],!1,null,null,null);s.default=c.exports}}]);
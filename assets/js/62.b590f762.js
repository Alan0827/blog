(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{390:function(e,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"在一个无序整数数组中-找出连续增长片段最长的一段-增长步长是1。example-3-2-4-5-6-1-9-最长的是-4-5-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在一个无序整数数组中-找出连续增长片段最长的一段-增长步长是1。example-3-2-4-5-6-1-9-最长的是-4-5-6"}},[e._v("#")]),e._v(" 在一个无序整数数组中，找出连续增长片段最长的一段, 增长步长是1。Example: [3,2,4,5,6,1,9], 最长的是[4,5,6]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("let arr = [3,2,1,14,5,5,8,1,2,3,4,5,6,76,7,1,2,9];\n\nfunction fn(arr){\n    let temp = [];\n    let sub = [];\n    for ( let i = 0; i < arr.length; i++ ){\n        if(arr[i]+1 === arr[i+1]){\n            temp.push(arr[i]);\n        }else{\n            if(temp.length!=0){\n                let temp1 = [];\n                temp.push(arr[i]);\n                \n                for( let i = 0 ; i < temp.length; i++){\n                    temp1.push(temp[i])\n                }\n                \n                if(sub.length===0||sub.length<temp1.length){\n                    sub = temp1\n                }\n                temp = [];\n            }\n        }\n    }\n    return sub;\n}\nlet arr1 = fn(arr);\nconsole.log(arr1);  //[1,2,3,4,5,6]\n")])])]),t("hr"),e._v(" "),t("h3",{attrs:{id:"打平嵌套数组-1-2-3-4-5-1-2-3-4-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打平嵌套数组-1-2-3-4-5-1-2-3-4-5"}},[e._v("#")]),e._v(" 打平嵌套数组 [1, [2, [3], 4], 5] => [1, 2, 3, 4, 5]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("const arr = [1,[2,[3],4],5]\nfunction sort(arr) {\n    for (let i in arr) {\n        if (Array.isArray(arr[i])) {\n            arr.splice(i, 1, ...sort(arr[i]))\n        }\n    }\n    return arr\n}\nsort(arr)   //[1, 2, 3, 4, 5]\n")])])]),t("hr"),e._v(" "),t("h3",{attrs:{id:"渐进增强和优雅降级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渐进增强和优雅降级"}},[e._v("#")]),e._v(" 渐进增强和优雅降级")]),e._v(" "),t("p",[e._v("定义:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("优雅降级（graceful degradation): 一开始就构建站点的完整功能，然后针对浏览器测试和修复")])]),e._v(" "),t("li",[t("p",[e._v("渐进增强（progressive enhancement): 一开始只构建站点的最少特性，然后不断针对各浏览器追加功能。")])])]),e._v(" "),t("p",[e._v("--都关注于同一网站在不同设备里不同浏览器下的表现程度")]),e._v(" "),t("p",[e._v("区别:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("“优雅降级”观点认为应该针对那些最高级、最完善的浏览器来设计网站. 而将那些被认为“过时”或有功能缺失的浏览器下的测试工作安排在开发周期的最后阶段，并把测试对象限定为主流浏览器（如 IE、Mozilla 等）的前一个版本。")])]),e._v(" "),t("li",[t("p",[e._v("“渐进增强”观点则认为应关注于内容本身。请注意其中的差别：我甚至连“浏览器”三个字都没提。")])])]),e._v(" "),t("p",[e._v("理解:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v('"优雅降级"就是首先完整地实现整个网站,包括其中的功能和效果. 然后再为那些无法支持所有功能的浏览器增加候选方案, 使之在旧式浏览器上以某种形式降级体验却不至于完全失效.')])]),e._v(" "),t("li",[t("p",[e._v('"渐进增强"则是从浏览器支持的基本功能开始, 首先为所有设备准备好清晰且语义化的html及完整内容, 然后再以无侵入的方法向页面增加无害于基础浏览器的额外样式和功能. 当浏览器升级时, 它们会自动呈现并发挥作用.')])])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"进程和线程的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程的区别"}},[e._v("#")]),e._v(" 进程和线程的区别")]),e._v(" "),t("ul",[t("li",[e._v("一个程序至少有一个进程,一个进程至少有一个线程.")]),e._v(" "),t("li",[e._v("线程的划分尺度小于进程，使得多线程程序的并发性高。")]),e._v(" "),t("li",[e._v("线程是独立调度的基本单位, 进程是拥有资源的基本单位")]),e._v(" "),t("li",[e._v("另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。")]),e._v(" "),t("li",[e._v("线程在执行过程中与进程还是有区别的。\n"),t("ul",[t("li",[e._v("每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。")]),e._v(" "),t("li",[e._v("但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。")])])]),e._v(" "),t("li",[e._v("从逻辑角度来看，\n"),t("ul",[t("li",[e._v("多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。")])])])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"js实现对象的深克隆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js实现对象的深克隆"}},[e._v("#")]),e._v(" js实现对象的深克隆")]),e._v(" "),t("p",[e._v("因为js中数据类型分为基本数据类型(number, string, boolean, null, undefined)和引用类型值(对象, 数组, 函数). 这两类对象在复制克隆的时候是有很大区别的. 原始类型存储的是对象的实际数据, 而对象类型存储的是对象的引用地址(对象的实际内容单独存放, 为了减少数据开销通常放在内存中). 此外, 对象的原型也是引用对象, 它把原型的属性和方法放在内存中, 通过原型链的方式来指向这个内存地址.")]),e._v(" "),t("p",[e._v("于是克隆也会分为两类:")]),e._v(" "),t("ul",[t("li",[e._v("浅度克隆: 原始类型为值传递, 对象类型仍为引用传递")]),e._v(" "),t("li",[e._v("深度克隆: 所有元素或属性均完全复制, 与原对象完全脱离, 也就是说所有对于新对象的修改都不会反映到原对象中")])]),e._v(" "),t("p",[e._v("深度克隆实现:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("function clone(obj){\n    if(typeof(obj)== 'object'){\n        var result = obj instanceof Array ? [] : {};\n        for(var i in obj){\n            var attr = obj[i];\n            result[i] = arguments.callee(attr);\n        }\n        return result;\n    } else {\n        return obj;\n    }\n};\n")])])]),t("hr"),e._v(" "),t("h3",{attrs:{id:"点击一个ul的五个li元素-分别弹出他们的序号-怎么做"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点击一个ul的五个li元素-分别弹出他们的序号-怎么做"}},[e._v("#")]),e._v(" 点击一个ul的五个li元素，分别弹出他们的序号，怎么做？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("for(var i=0; i<lis.length; i++){\n    oLis[i].onclick = (function(j){\n        return function(){\n            alert(j);\n        }\n    })(i);\n}\n或 立即执行函数\nfor(var i=0; i<lis.length; i++){\n    (function(j){\n        oLi[j].onclick = function(){\n            alert(j);\n        };\n    })(i);\n}\n")])])]),t("hr"),e._v(" "),t("h3",{attrs:{id:"typeof与instanceof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typeof与instanceof"}},[e._v("#")]),e._v(" typeof与instanceof")]),e._v(" "),t("p",[e._v("相同点：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("JavaScript 中 typeof 和 instanceof 常用来判断一个变量是否为空，或者是什么类型的。\n")])])]),t("p",[e._v("typeof的定义和用法：返回值是一个字符串，用来说明变量的数据类型。")]),e._v(" "),t("p",[e._v("细节：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('(1)、typeof 一般只能返回如下几个结果：number,boolean,string,function,object,undefined。\n\n(2)、typeof 来获取一个变量是否存在，如 if(typeof a!="undefined"){alert("ok")}，而不要去使用 if(a) 因为如果 a 不存在（未声明）则会出错。\n\n(3)、对于 Array,Null 等特殊对象使用 typeof 一律返回 object，这正是 typeof 的局限性。\n')])])]),t("p",[e._v("Instanceof定义和用法：instanceof 用于判断一个变量是否属于某个对象的实例。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("var a = new Array(); \nalert(a instanceof Array);  // true\nalert(a instanceof Object)  // true\n\nfunction test(){};\nvar a = new test();\nalert(a instanceof test)   // true\n")])])]),t("hr"),e._v(" "),t("h3",{attrs:{id:"谈谈垃圾回收机制方式及内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈谈垃圾回收机制方式及内存管理"}},[e._v("#")]),e._v(" 谈谈垃圾回收机制方式及内存管理")]),e._v(" "),t("p",[e._v("回收机制方式\n1、定义和用法：垃圾回收机制(GC:Garbage Collection),执行环境负责管理代码执行过程中使用的内存。")]),e._v(" "),t("p",[e._v("2、原理：垃圾收集器会定期（周期性）找出那些不在继续使用的变量，然后释放其内存。但是这个过程不是实时的，因为其开销比较大，所以垃圾回收器会按照固定的时间间隔周期性的执行。")]),e._v(" "),t("p",[e._v("3、实例如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("function fn1() {\n    var obj = {name: 'hanzichi', age: 10};\n}\nfunction fn2() {\n    var obj = {name:'hanzichi', age: 10};\n    return obj;\n}\nvar a = fn1();\nvar b = fn2();\n")])])]),t("blockquote",[t("p",[e._v("fn1中定义的obj为局部变量，而当调用结束后，出了fn1的环境，那么该块内存会被js引擎中的垃圾回收器自动释放；在fn2被调用的过程中，返回的对象被全局变量b所指向，所以该块内存并不会被释放。")])]),e._v(" "),t("p",[e._v("垃圾回收策略：标记清除(较为常用)和引用计数。")]),e._v(" "),t("blockquote",[t("p",[e._v("标记清除：")])]),e._v(" "),t("p",[e._v('定义和用法：当变量进入环境时，将变量标记"进入环境"，当变量离开环境时，标记为："离开环境"。某一个时刻，垃圾回收器会过滤掉环境中的变量，以及被环境变量引用的变量，剩下的就是被视为准备回收的变量。')]),e._v(" "),t("p",[e._v("到目前为止，IE、Firefox、Opera、Chrome、Safari的js实现使用的都是标记清除的垃圾回收策略或类似的策略，只不过垃圾收集的时间间隔互不相同。")]),e._v(" "),t("blockquote",[t("p",[e._v("引用计数：")])]),e._v(" "),t("p",[e._v("定义和用法：引用计数是跟踪记录每个值被引用的次数。")]),e._v(" "),t("p",[e._v("基本原理：就是变量的引用次数，被引用一次则加1，当这个引用计数为0时，被视为准备回收的对象。")]),e._v(" "),t("blockquote",[t("p",[e._v("内存管理")])]),e._v(" "),t("p",[e._v("1、什么时候触发垃圾回收？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("垃圾回收器周期性运行，如果分配的内存非常多，那么回收工作也会很艰巨，确定垃圾回收时间间隔就变成了一个值得思考的问题。\n\nIE6的垃圾回收是根据内存分配量运行的，当环境中的变量，对象，字符串达到一定数量时触发垃圾回收。垃圾回收器一直处于工作状态，严重影响浏览器性能。\n\nIE7中，垃圾回收器会根据内存分配量与程序占用内存的比例进行动态调整，开始回收工作。\n")])])]),t("p",[e._v("2、合理的GC方案：(1)、遍历所有可访问的对象; (2)、回收已不可访问的对象。")]),e._v(" "),t("p",[e._v("3、GC缺陷：(1)、停止响应其他操作；")]),e._v(" "),t("p",[e._v("4、GC优化策略：(1)、分代回收（Generation GC）;(2)、增量GC")]),e._v(" "),t("blockquote",[t("p",[e._v("开发过程中遇到的内存泄露情况，如何解决的？")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("(1)、当页面中元素被移除或替换时，若元素绑定的事件仍没被移除，在IE中不会作出恰当处理，此时要先手工移除事件，不然会存在内存泄露。")])]),e._v(" "),t("li",[t("p",[e._v("(2)、由于是函数内定义函数，并且内部函数--事件回调的引用外暴了，形成了闭包。闭包可以维持函数内局部变量，使其得不到释放。\n实例如下：")])])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"jquery-库中的-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery-库中的-是什么"}},[e._v("#")]),e._v(" jQuery 库中的 $() 是什么？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("$() 函数是 jQuery() 函数的别称。$() 函数用于将任何对象包裹成 jQuery 对象，接着你就被允许调用定义在 jQuery 对象上的多个不同方法。你可以将一个选择器字符串传入 $() 函数，它会返回一个包含所有匹配的 DOM 元素数组的 jQuery 对象。\n")])])]),t("h3",{attrs:{id:"this-和-this-关键字在-jquery-中有何不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this-和-this-关键字在-jquery-中有何不同"}},[e._v("#")]),e._v(" $(this) 和 this 关键字在 jQuery 中有何不同？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("$(this) 返回一个 jQuery 对象，你可以对它调用多个 jQuery 方法，比如用 text() 获取文本，用val() 获取值等等。\n\n而 this 代表当前元素，它是 JavaScript 关键词中的一个，表示上下文中的当前 DOM 元素。你不能对它调用 jQuery 方法，直到它被 $() 函数包裹，例如 $(this)。\n")])])]),t("h3",{attrs:{id:"jquery有几种选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery有几种选择器"}},[e._v("#")]),e._v(" JQuery有几种选择器?")]),e._v(" "),t("p",[e._v("(1)、基本选择器：#id，class,element,*;")]),e._v(" "),t("p",[e._v("(2)、层次选择器：parent > child，prev + next ，prev ~ siblings")]),e._v(" "),t("p",[e._v("(3)、基本过滤器选择器：:first，:last ，:not ，:even ，:odd ，:eq ，:gt ，:lt")]),e._v(" "),t("p",[e._v("(4)、内容过滤器选择器： :contains ，:empty ，:has ，:parent")]),e._v(" "),t("p",[e._v("(5)、可见性过滤器选择器：:hidden ，:visible")]),e._v(" "),t("p",[e._v("(6)、属性过滤器选择器：[attribute] ，[attribute=value] ，[attribute!=value] ，[attribute^=value] ，[attribute$=value] ，[attribute*=value]")]),e._v(" "),t("p",[e._v("(7)、子元素过滤器选择器：:nth-child ，:first-child ，:last-child ，:only-child")]),e._v(" "),t("p",[e._v("(8)、表单选择器： :input ，:text ，:password ，:radio ，:checkbox ，:submit 等；")]),e._v(" "),t("p",[e._v("(9)、表单过滤器选择器：:enabled ，:disabled ，:checked ，:selected")]),e._v(" "),t("h3",{attrs:{id:"document-ready-方法和window-onload有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-ready-方法和window-onload有什么区别"}},[e._v("#")]),e._v(" $(document).ready()方法和window.onload有什么区别？")]),e._v(" "),t("p",[e._v("(1)、window.onload方法是在网页中所有的元素(包括元素的所有关联文件)完全加载到浏览器后才执行的。")]),e._v(" "),t("p",[e._v("(2)、$(document).ready() 方法可以在DOM载入就绪时就对其进行操纵，并调用执行绑定的函数。")]),e._v(" "),t("h3",{attrs:{id:"如何用jquery禁用浏览器的前进后退按钮"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何用jquery禁用浏览器的前进后退按钮"}},[e._v("#")]),e._v(" 如何用jQuery禁用浏览器的前进后退按钮？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<script type="text/javascript" language="javascript">\n　　$(document).ready(function() {\n　　　　window.history.forward(1);\n　　　　//OR window.history.forward(-1);\n　　});\n<\/script>\n')])])]),t("h3",{attrs:{id:"jquery的事件委托方法bind-、live、delegate、on之间有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery的事件委托方法bind-、live、delegate、on之间有什么区别"}},[e._v("#")]),e._v(" jQuery的事件委托方法bind 、live、delegate、on之间有什么区别？")]),e._v(" "),t("p",[e._v("(1)、bind 【jQuery 1.3之前】")]),e._v(" "),t("p",[e._v("定义和用法：主要用于给选择到的元素上绑定特定事件类型的监听函数；")]),e._v(" "),t("p",[e._v("语法：bind(type,[data],function(eventObject))；")]),e._v(" "),t("p",[e._v("特点：")]),e._v(" "),t("p",[e._v("(1)、适用于页面元素静态绑定。只能给调用它的时候已经存在的元素绑定事件，不能给未来新增的元素绑定事件。")]),e._v(" "),t("p",[e._v("(2)、当页面加载完的时候，你才可以进行bind()，所以可能产生效率问题。")]),e._v(" "),t("p",[e._v('实例如下：$( "#members li a" ).bind( "click", function( e ) {} );')]),e._v(" "),t("p",[e._v("(2)、live 【jQuery 1.3之后】\n定义和用法：主要用于给选择到的元素上绑定特定事件类型的监听函数；")]),e._v(" "),t("p",[e._v("语法：live(type, [data], fn);")]),e._v(" "),t("p",[e._v("特点：")]),e._v(" "),t("p",[e._v("(1)、live方法并没有将监听器绑定到自己(this)身上，而是绑定到了this.context上了。")]),e._v(" "),t("p",[e._v("(2)、live正是利用了事件委托机制来完成事件的监听处理，把节点的处理委托给了document，新添加的元素不必再绑定一次监听器。")]),e._v(" "),t("p",[e._v('(3)、使用live（）方法但却只能放在直接选择的元素后面，不能在层级比较深，连缀的DOM遍历方法后面使用，即$(“ul”").live...可以，但$("body").find("ul").live...不行；')]),e._v(" "),t("p",[e._v('实例如下：$( document ).on( "click", "#members li a", function( e ) {} );')]),e._v(" "),t("p",[e._v("(3)、delegate 【jQuery 1.4.2中引入】\n定义和用法：将监听事件绑定在就近的父级元素上")]),e._v(" "),t("p",[e._v("语法：delegate(selector,type,[data],fn)")]),e._v(" "),t("p",[e._v("特点：")]),e._v(" "),t("p",[e._v("(1)、选择就近的父级元素，因为事件可以更快的冒泡上去，能够在第一时间进行处理。")]),e._v(" "),t("p",[e._v("(2)、更精确的小范围使用事件代理，性能优于.live()。可以用在动态添加的元素上。")]),e._v(" "),t("p",[e._v("实例如下：")]),e._v(" "),t("p",[e._v('$("#info_table").delegate("td","click",function(){/'),t("em",[e._v("显示更多信息")]),e._v("/});")]),e._v(" "),t("p",[e._v('$("table").find("#info").delegate("td","click",function(){/'),t("em",[e._v("显示更多信息")]),e._v("/});")]),e._v(" "),t("p",[e._v("(4)、on 【1.7版本整合了之前的三种方式的新事件绑定机制】\n定义和用法：将监听事件绑定到指定元素上。")]),e._v(" "),t("p",[e._v("语法：on(type,[selector],[data],fn)")]),e._v(" "),t("p",[e._v('实例如下：$("#info_table").on("click","td",function(){/'),t("em",[e._v("显示更多信息")]),e._v("/});参数的位置写法与delegate不一样。")]),e._v(" "),t("p",[e._v("说明：on方法是当前JQuery推荐使用的事件绑定方法，附加只运行一次就删除函数的方法是one()。")]),e._v(" "),t("p",[e._v("总结：.bind(), .live(), .delegate(),.on()分别对应的相反事件为：.unbind(),.die(), .undelegate(),.off()")]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"简述一下src与href的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简述一下src与href的区别"}},[e._v("#")]),e._v(" 简述一下src与href的区别")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。\n\nsrc是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。\n\n当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。\n")])])]),t("h3",{attrs:{id:"浏览器的内核分别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的内核分别是什么"}},[e._v("#")]),e._v(" 浏览器的内核分别是什么?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("IE: trident内核\nFirefox：gecko内核\nSafari：webkit内核\nOpera：以前是presto内核，Opera现已改用Google Chrome的Blink内核\nChrome：Blink(基于webkit，Google与Opera Software共同开发)\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{370:function(n,e,t){"use strict";t.r(e);var a=t(4),r=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"本次需求分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本次需求分析"}},[n._v("#")]),n._v(" 本次需求分析：")]),n._v(" "),e("ol",[e("li",[n._v("从原来城市的数据，变为省市区的数据；")]),n._v(" "),e("li",[n._v("地图需要根据缩放级别绘制icon；")]),n._v(" "),e("li",[n._v("地图点击需要切换到当前点击区域的数据；")]),n._v(" "),e("li",[n._v("实时投递弹窗和实时清运弹窗；")]),n._v(" "),e("li",[n._v("有权限区域的绘制；")])]),n._v(" "),e("h2",{attrs:{id:"_1-权限区域绘制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-权限区域绘制"}},[n._v("#")]),n._v(" 1. 权限区域绘制")]),n._v(" "),e("blockquote",[e("p",[n._v("目前项目使用行政区划浏览 绘制权限区域 具体用法如下：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('//加载DistrictExplorer，loadUI的路径参数为模块名中 \'ui/\' 之后的部分 \nAMapUI.loadUI([\'geo/DistrictExplorer\'], function(DistrictExplorer) {\n//启动页面\ninitPage(DistrictExplorer);\n}); \n\nfunction initPage(DistrictExplorer) {\n//创建一个实例\nvar districtExplorer = new DistrictExplorer({\n    map: map //关联的地图实例\n});\n\nvar adcode = 100000; //全国的区划编码\n\ndistrictExplorer.loadAreaNode(adcode, function(error, areaNode) {\n\n    if (error) {\n        console.error(error);\n        return;\n    }\n\n    //绘制载入的区划节点\n    renderAreaNode(districtExplorer, areaNode);\n});\n}\n\nfunction renderAreaNode(districtExplorer, areaNode) {\n\n//清除已有的绘制内容\ndistrictExplorer.clearFeaturePolygons();\n\n//just some colors\nvar colors = ["#3366cc", "#dc3912", "#ff9900", "#109618", "#990099", "#0099c6", "#dd4477", "#66aa00"];\n\n//绘制子级区划\ndistrictExplorer.renderSubFeatures(areaNode, function(feature, i) {\n\n    var fillColor = colors[i % colors.length];\n    var strokeColor = colors[colors.length - 1 - i % colors.length];\n\n    return {\n        cursor: \'default\',\n        bubble: true,\n        strokeColor: strokeColor, //线颜色\n        strokeOpacity: 1, //线透明度\n        strokeWeight: 1, //线宽\n        fillColor: fillColor, //填充色\n        fillOpacity: 0.35, //填充透明度\n    };\n});\n\n//绘制父级区划，仅用黑色描边\ndistrictExplorer.renderParentFeature(areaNode, {\n    cursor: \'default\',\n    bubble: true,\n    strokeColor: \'black\', //线颜色\n    fillColor: null,\n    strokeWeight: 3, //线宽\n});\n\n//更新地图视野以适合区划面\nmap.setFitView(districtExplorer.getAllFeaturePolygons());\n}\n')])])]),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185610.313udrtl2560.webp",alt:"avatar"}}),n._v("\n新需求是要求到区一级，有权限的区域可能不是一个市的全部区域，行政区划浏览会把一个城市的所有区域绘制出来，或者把一个省的所有市绘制出来，所以，这种绘制区域的方案pass掉。。。。")]),n._v(" "),e("div",{attrs:{align:"center"}},[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/微信图片_20181219185622.1elzsm6otl28.webp"}})]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("我新的方案采用的是 高德的 “行政区查询” \nAMap.plugin('AMap.DistrictSearch', function () {\n    // 创建行政区查询对象\n    var district = new AMap.DistrictSearch({\n        // 返回行政区边界坐标等具体信息\n        extensions: 'all',\n        // 设置查询行政区级别为 区 \n        level: 'district'\n    })\n\n    district.search('110110', function(status, result) {\n        // 获取朝阳区的边界信息\n        var bounds = result.districtList[0].boundaries\n        var polygons = []\n        if (bounds) {\n        for (var i = 0, l = bounds.length; i < l; i++) {\n        //生成行政区划polygon\n        var polygon = new AMap.Polygon({\n            map: map,\n            strokeWeight: 1,\n            path: bounds[i],\n            fillOpacity: 0.7,\n            fillColor: '#CCF3FF',\n            strokeColor: '#CC66CC'\n        })\n        polygons.push(polygon)\n        }\n        // 地图自适应\n        map.setFitView()\n    }\n    })\n})\n")])])]),e("p",[n._v("我们要做的只有，把有权限区域的区域编码拿到，就可以绘制权限区域了。")]),n._v(" "),e("h2",{attrs:{id:"_2-地图点击需要切换到当前区域的数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-地图点击需要切换到当前区域的数据"}},[n._v("#")]),n._v(" 2. 地图点击需要切换到当前区域的数据")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185650.4udsai8mgqg0.webp",alt:"avatar"}}),n._v("\n例如，当前点击的是 广东省深圳市南山区，我们没法判断到底是点击的是广东省，深圳市，还是南山区，所以区分不了点击的省市区；")]),n._v(" "),e("p",[n._v("而且，点击地图的时候只会返回城市级别的code，用code做请求的时候，来获取数据。")]),n._v(" "),e("p",[n._v("这里我利用了地图的“缩放级别”来做控制。利用map.getZoom()来获取地图的缩放级别，我分为三个档次：x<8,8<=x<=10,x>10,根据地图当前的级别，分别三个档次的点击代表省市区，这样我们可以获取到地图返回的中文省市区，拿中文省市区，去后台给到的有权限的三级区域列表做匹配，然后，拿到对应的code做请求，获取数据。")]),n._v(" "),e("p",[n._v("点击地图之后的具体方法，如下：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("geocoder.getAddress(e.lnglat, function (status, result) {\n    if (status === 'complete' && result.info === 'OK') {\n        // console.log(JSON.stringify(result))\n        // console.log(map.getZoom())\n        //当前的名称\n        var currentName = ''\n        //权限列表是否包含当前name\n        var isContain = true;\n        //各级名称\n        var provinceName = result.regeocode.addressComponent.province\n        var cityName = result.regeocode.addressComponent.city\n        var districtName = result.regeocode.addressComponent.district\n\n        //没区的时候直接取cityCode\n        var noDistrictCityCode = result.regeocode.addressComponent.adcode\n        if (map.getZoom() < 8) { //此处去拿省的回收机数量 传给MachineNumWindow\n            // 拿省的名称去匹配 \n            selectName = currentName = provinceName\n            let list = provinceList.filter(x => x.cityName.includes(currentName))[0]\n            if (list) {\n                isContain = true\n                currentAdcode = list.cityCode\n            } else {\n                isContain = false\n            }\n\n        } else if (map.getZoom() >= 8 && map.getZoom() <= 10) {\n            //北京、上海等地可能没有cityName\n            selectName = currentName = cityName ? cityName : provinceName\n            // console.log(currentName)\n            let list = cityList.filter(x => x.cityName.includes(currentName))[0]\n            // console.log(list)\n            if (list) {\n                isContain = true\n                currentName = provinceName + cityName\n                currentAdcode = list.cityCode\n            } else {\n                isContain = false\n            }\n\n        } else {\n            currentName = districtName\n            if (districtName == '') {\n                currentName = provinceName + cityName;\n                currentAdcode = noDistrictCityCode * 1000000;\n                isContain = true;\n            } else {\n                let list = districtList.filter(x => x.cityName.includes(currentName))[0]\n                // console.log(list)\n                if (list) {\n                    isContain = true\n                    currentName = provinceName + cityName + districtName\n                    currentAdcode = list.cityCode\n                } else {\n                    isContain = false;\n                }\n            }\n            selectName = cityName ? cityName + districtName : provinceName + districtName\n        }\n        // console.log(isContain)\n        //如果没有匹配到return\n        if (!isContain) {\n            map.clearInfoWindow();\n            return false;\n        }\n\n        //拿到当前的名称去请求当前区域中心经纬度\n        geocoder.getLocation(currentName, function (status, result) {\n            if (status === 'complete' && result.info === 'OK') {\n                // result中对应详细地理坐标信息\n                // console.log(JSON.stringify(result))\n                let location = result.geocodes[0].location;\n                currentLnglat = [location.lng, location.lat]\n            }\n        })\n\n        // console.log(currentLnglat)\n\n        //打开名称数量信息窗体\n        openNumWindow(clickLnglat, {\n            name: currentName,\n            // num: currentNum\n        })\n\n\n    }\n\n});\n")])])]),e("p",[n._v("我们是需要弹出当前点击的区域名称，然后点击当前的信息窗体，请求数据。。。。")]),n._v(" "),e("h2",{attrs:{id:"_3-根据地图缩放级别展示不同的icon-回收机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-根据地图缩放级别展示不同的icon-回收机"}},[n._v("#")]),n._v(" 3. 根据地图缩放级别展示不同的icon  回收机")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185628.1hpuku52bagw.webp",alt:"avatar"}}),n._v("\n这个之前做城市数据墙的时候，可能回收机的数量不是特别大，只是显示一个城市的回收机，而且也不用变换图标，所以性能上面没有发现问题，后来，我沿用之前添加marker的方法，由于我的地图是需要显示大量的点，而且会做切换，上了生产环境之后发现严重的性能问题，pass掉了，测试，预发布。。。。。没有生产那么多的数据，并没有发现。。。。。悲催")]),n._v(" "),e("div",{attrs:{align:"center"}},[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/微信图片_20181219185631.214jss41enk0.webp"}})]),n._v(" "),e("p",[n._v("后来，经过团队的讨论，选了高德地图海量点的方案，此方案“据高德说”，10万+ 以下都可以hold住，牛鼻。。。。。。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("//海量点的style  图标提前定义写死，后面更换时直接修改数据里的style\nvar massStyle = [{\n        url: './images/point.png',\n        anchor: new AMap.Pixel(3, 6),\n        size: new AMap.Size(6, 6)\n    },\n    {\n        url: './images/city_full.png',\n        anchor: new AMap.Pixel(27, 57),\n        size: new AMap.Size(54, 57)\n    },\n    {\n        url: './images/city_unfull.png',\n        anchor: new AMap.Pixel(27, 57),\n        size: new AMap.Size(54, 57)\n    },\n    {\n        url: './images/district_full.png',\n        anchor: new AMap.Pixel(27, 61),\n        size: new AMap.Size(54, 61)\n    },\n    {\n        url: './images/district_unfull.png',\n        anchor: new AMap.Pixel(27, 61),\n        size: new AMap.Size(54, 61)\n    },\n]\nvar massMarks = [] //海量点\n//海量点  需要提前创建实例，避免每次权限变动多次实例化，造成性能问题,创建实例时先放空数据进去，按照官网不放数据setData不行\nmassMarks = new AMap.MassMarks([], {\n    zIndex: 111,\n    cursor: 'pointer',\n    style: massStyle\n});\n\n\n\n/**\n* 绘制回收机\n* @date 2018-12-04\n* @param {*} data 中心地图原始回收机列表\n* @returns\n*/\nfunction getMapFun(data) {\n    // console.log(data)\n    if (!data || data.length == 0) { //此处要判断data  如不的话，试试，神坑。。。地图样式加载不出来\n        return false;\n    }\n    machineList = []\n    data.map(x => {\n        machineList.push({\n            lnglat: [x.longitude, x.latitude],\n            siteCode: x.siteCode,\n            isFull: x.isFull,\n            style: 0\n        })\n    })\n\n    massMarks.clear()\n    massMarks.setData(machineList)\n    massMarks.setMap(map);\n\n    //渲染回收机\n    renderMap(machineList)\n\n}\n\n\n/**\n* 渲染中心地图数据回收机，不同缩放级别替换图标\n* @date 2018-12-04\n* @param {*} data  处理过后的回收机列表\n* @returns\n*/\nfunction renderMap(data) {\n    // console.log(data)\n    //监听地图缩放前后级别，如果在同一区间内就不做渲染了,节约性能\n    if (startZoom <= 9 && startZoom >= 3 && endZoom <= 9 && endZoom >= 3) {\n        return false;\n    }\n    if (startZoom > 9 && startZoom <= 14 && endZoom > 9 && endZoom <= 14) {\n        return false;\n    }\n    if (startZoom >= 15 && endZoom >= 15) {\n        return false;\n    }\n    // console.log(map.getZoom())\n    //不同级别的data中style要换，图标动态更换，重新渲染style\n    if (map.getZoom() <= 9) {\n        massMarks.setStyle(massStyle[0])\n    }\n    if (map.getZoom() > 9 && map.getZoom() <= 14) {\n        data.map(x => {\n            x.isFull == 1 ? x.style = 1 : x.style = 2\n        })\n        massMarks.setStyle(massStyle)\n    }\n    if (map.getZoom() >= 15) {\n        data.map(x => {\n            x.isFull == 1 ? x.style = 3 : x.style = 4\n        })\n        massMarks.setStyle(massStyle)\n    }\n}\n")])])]),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185636.6ubvqfz4qc40.webp",alt:"avatar"}}),n._v(" "),e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185642.4mqvh7b3i3a0.webp",alt:"avatar"}}),n._v(" "),e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Alan0827/picx-images-hosting@master/gaode/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20181219185646.45d1c6em2k20.webp",alt:"avatar"}}),n._v("\n详细的方法都在上面了，图标的话根据级别不同，共有5种。")]),n._v(" "),e("p",[n._v("至此，高德地图项目的坑都被我踩了好多了。。。过程其实蛮曲折的，记录下来的话，好像没有什么东西似的，不过平时多记录以下踩坑的话，会后相信遇到类似的问题，会好很多，希望大家一样。。。。。")]),n._v(" "),e("p",[n._v("哦，好像还有个实时弹窗的问题")]),n._v(" "),e("h2",{attrs:{id:"_4-实时投递弹窗和实时清运弹窗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-实时投递弹窗和实时清运弹窗"}},[n._v("#")]),n._v(" 4. 实时投递弹窗和实时清运弹窗")]),n._v(" "),e("p",[n._v("实时弹窗利用的就是new Amap.Marker()方法，绘制的marker，为什么用这个呢？不用信息窗体，信息窗体在地图中只能同时存在一个，这个就操蛋了。。。。。所以，这里实时弹窗放弃信息窗体，因为其他地方我已经用过信息窗体。")]),n._v(" "),e("p",[n._v("直接上代码吧  显示3s，然后去掉，这里有个判断就是不在可视区域内的话，放在右上角，一个dom操作，在可视区域的话，需要显示在当前的实时的点上面，大概就这样。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('/**\n* 绘制实时投机信息窗体\n* @date 2018-12-04\n* @param {*} data\n*/\nfunction renderToudiWindow(data) {\n    // console.dir(data)\n    let lng = data.longitude;\n    let lat = data.latitude;\n    var bound = map.getBounds(); //地图可视区域\n    //判断该点是否在可视范围内（针对东经，北纬）\n    if (lng < bound.northeast.lng && lng > bound.southwest.lng && lat < bound.northeast.lat && lat > bound.southwest.lat) {\n        recoveryMarker = new AMap.Marker({\n            position: [lng, lat],\n            content: createToudiWindow(data),\n            offset: new AMap.Pixel(14, -26)\n        });\n        map.add(recoveryMarker)\n        setTimeout(function () {\n            map.remove(recoveryMarker)\n            recoveryMarker = null\n        }, 3000)\n    } else {\n        $(".module4 .nowWindow").append(createToudiWindow(data))\n        setTimeout(function () {\n            $(".module4 .nowWindow").children().first().remove();\n        }, 3000)\n    }\n}\n\n\n\n/**\n* 实时投递信息窗体\n* @date 2018-12-04\n* @param {*} data\n* @returns\n*/\nfunction createToudiWindow(data) {\n    let info = `<div class="toudi-window">\n                    <div class="qingyun-content">\n                        <div class="title">回收机实时投递</div>\n                        <div class="time">\n                            <span>${data.cityName}</span>\n                        </div>\n                        ${data.list.map(x=>\n                            `<div class="num">\n                                <span>${x.typeName}：</span>\n                                <span>\n                                    <b>${x.type==\'0\'?Number(x.value):x.value}</b>\n                                    ${x.valueCompany}\n                                </span>\n                            </div>`\n                        ).join(\'\')}\n                        <div class="weight">\n                            <span>${data.nickName}</span>\n                            <span>\n                                ${data.time}\n                            </span>\n                        </div>\n                    </div>\n                </div>`\n    return info\n}\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);